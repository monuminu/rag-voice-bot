# Comments are provided throughout this file to help you get started.
# If you need more help, visit the Docker Compose reference guide at
# https://docs.docker.com/go/compose-spec-reference/

# Here the instructions define your application as a service called "server".
# This service is built from the Dockerfile in the current directory.
# You can add other services your application may depend on here, such as a
# database or a cache. For examples, see the Awesome Compose repository:
# https://github.com/docker/awesome-compose


services:
  server:
    build:
      context: .
    ports:
      - "8000:8000"
    # environment:
    #   - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
    #   - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
    #   - AZURE_OPENAI_DEPLOYMENT=${AZURE_OPENAI_DEPLOYMENT}
    #   - AZURE_OPENAI_CHAT_DEPLOYMENT_VERSION=${AZURE_OPENAI_CHAT_DEPLOYMENT_VERSION}
    #   - AZURE_SEARCH_ENDPOINT=${AZURE_SEARCH_ENDPOINT}
    #   - AZURE_SEARCH_KEY=${AZURE_SEARCH_KEY}
    #   - INDEX_NAME=${INDEX_NAME}
    #   - CHAINLIT_AUTH_SECRET=${CHAINLIT_AUTH_SECRET}
    #   - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
    #   - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION}
    #   - DOCKER_IMAGE_NAME=${DOCKER_IMAGE_NAME}
    #   - DOCKER_CONTAINER_NAME=${DOCKER_CONTAINER_NAME}
    #   - ACR_NAME=${ACR_NAME}
    #   - ACR_REPOSITORY=${ACR_REPOSITORY}
    volumes:
      - .:/app
    command: chainlit run app.py -w --host 0.0.0.0 --port 8000 
